import gwtm_api
import datetime
from astropy.coordinates import SkyCoord 
from astropy.coordinates import Angle
from astropy.table import Table
import astropy.units as u
from astropy.time import Time
import numpy as np
import matplotlib.pyplot as plt


#Documentation links
#https://docs.google.com/document/d/1R0Fv2vU33oKc6U7UTRP7pB3Xt4duK5wcbRQ1b5jQUSs/edit?usp=sharing

#RA and DEC should be in degrees

#How to run from command line
# python3.10 submit_treasuremap_gwemopt.py /Users/brendan/Documents/research/gwemopt/data/GW190425_test/schedule_DECam.dat MS230508n completed 38 your_api_token_goes_here


def submit_treasuremap_gwemopt(graceid, api_token, status, ralist, declist, times, depths, bands, instrumentid):
	#Bulk submission of treasure map pointings for e.g. Swope in the format e.g. # name ra dec filter exptime start_time_utc m3sigma 
    #Assumes we are using the AB magnitude system and are not savages. 
    
    batch = []

    for i in range(len(ralist)):
                
        p = gwtm_api.Pointing(
        ra= ralist[i],
        dec= declist[i],
        instrumentid = instrumentid,
        time = times[i],
        status = status,
        depth = depths[i],
        depth_unit = 'ab_mag', 
        pos_angle=0, #Not sure if we plan to change position angles?
        band = bands[i]
        )
    
        batch.append(p)
        
       
    gwtm_api.Pointing.batch_post(pointings=batch, graceid=graceid, api_token=api_token)
    
    print(len(batch))
    print(len(ralist))


#######################################################

if __name__ == '__main__':


	print("Takes an input of the gwemopt output pointings (schedule_DECam.dat) where RA/DEC are in degrees.")

	#############################
	## Parsing input arguments ##
	#############################

	import argparse

	parser = argparse.ArgumentParser(description="Wrapper to submit pointings to treasuremap.")
	parser.add_argument("file", help="Pointings file generated by gwemopt",type=str)
	parser.add_argument("graceid", help="graceid of event to submit pointings for",type=str)
	parser.add_argument("status", help="planned vs completed",type=str)
	parser.add_argument("instrumentid", help="Treasuremap instrument ID, e.g., DECam = 38",type=int)
	parser.add_argument("api_token", help="Your treasuremap api_token ",type=str)
	args = parser.parse_args()

	pointingslist = Table.read(args.file, format='ascii')
	ralist = pointingslist.columns[1].data
	declist = pointingslist.columns[2].data
	bands = pointingslist.columns[8].data
	times = pointingslist.columns[3].data
	depths = pointingslist.columns[4].data


	#Convert times from MJD to UTC
	#https://docs.astropy.org/en/stable/time/index.html MJD to UTC conversion!


	t = Time(times, format='mjd')
	t = t.isot
	#print(t)


	# Submit to treasuremap
	submit_treasuremap_gwemopt(args.graceid, args.api_token, args.status, ralist, declist, t, depths, bands, args.instrumentid)

    #How to run from command line
    # python3.10 submit_treasuremap_gwemopt.py /Users/brendan/Documents/research/gwemopt/data/GW190425_test/schedule_DECam.dat MS230508n completed 38 your_api_token_goes_here

	#ra = Angle(ralist*u.degree)
	#ra = ra.wrap_at(180*u.degree)
	#dec = Angle(declist*u.degree)
	#fig = plt.figure(figsize=(8,6))
	#ax = fig.add_subplot(111, projection='mollweide')
	#ax.scatter(ra.radian, dec.radian)
	#plt.show()



#